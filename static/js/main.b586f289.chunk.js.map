{"version":3,"sources":["Component/LibrarySong.js","Component/Library.js","Component/player.js","Component/song.js","Component/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["LibrarySong","song","setCurrentSong","songs","id","audioRef","isPlaying","setSongs","songSelectHandler","a","newSongs","map","active","play","onClick","className","alt","name","src","cover","artist","Library","libraryStatus","Player","currentSong","setIsPlaying","setSongInfo","songInfo","activeLibraryHandler","nextPrev","skipTrackHandler","direction","currentIndex","findIndex","length","current","getTime","time","Math","floor","slice","trackAnim","transform","animationPercentage","currentTime","style","background","Color","min","max","duration","value","type","onChange","e","target","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","Nav","setLibraryStatus","faMusic","chillHop","audio","random","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","console","log","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b586f289.chunk.js","sourcesContent":["\r\n\r\nconst LibrarySong = ({song, setCurrentSong, songs, id, audioRef, isPlaying, setSongs}) => {\r\n\r\n\r\n     const songSelectHandler = async () => {\r\n        await setCurrentSong(song);\r\n    \r\n       // Add active state\r\n      \r\n       const newSongs = songs.map((song) => {\r\n        if(song.id === id) {\r\n            return {\r\n                ...song,\r\n                active: true,\r\n                \r\n            }\r\n        }else {\r\n            return {\r\n                ...song, \r\n                active: false\r\n            }\r\n        }\r\n       });\r\n\r\n       await setSongs(newSongs);\r\n       \r\n       \r\n        //Check if the song is playing \r\n        if(isPlaying) audioRef.play()\r\n       \r\n         \r\n     }\r\n    return (\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : ''}`}>\r\n<img alt={song.name} src ={song.cover}></img>\r\n<div className=\"song-description\">\r\n<h3>{song.name}</h3>\r\n<h4>{song.artist}</h4>\r\n</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;\r\n\r\n","import React from 'react'\r\nimport LibrarySong from './LibrarySong'\r\n\r\nconst Library = ({isPlaying, audioRef, songs, setCurrentSong,setSongs, libraryStatus}) => {\r\n  return (\r\n    <div className= {`library ${libraryStatus ? 'active-library': ''}`}>\r\n        <h2>Library</h2>\r\n        <div className=\"library-songs\">\r\n            {songs.map(song => (\r\n                <LibrarySong \r\n                id = {song.id} \r\n                key= {song.name} \r\n                song = {song} \r\n                songs = {songs} \r\n                setCurrentSong = {setCurrentSong} \r\n                audioRef = {audioRef}\r\n                isPlaying = {isPlaying}\r\n                setSongs = {setSongs} \r\n                />\r\n            ))}\r\n        </div>\r\n    </div>\r\n  ) \r\n}\r\n\r\nexport default Library","\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleRight, faPlay, faAngleLeft, faPause} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n\r\n\r\n\r\nconst Player = ({audioRef, currentSong, isPlaying, songs, setIsPlaying, setSongInfo, songInfo, setCurrentSong, setSongs}) => {\r\n    \r\n\r\n\r\n\r\n    \r\nconst activeLibraryHandler = (nextPrev) => {\r\n    const newSongs = songs.map((song) => {\r\n        if(song.id === nextPrev.id) {\r\n            return {\r\n                ...song,\r\n                active: true,\r\n                \r\n            }\r\n        }else {\r\n            return {\r\n                ...song, \r\n                active: false\r\n            }\r\n        }\r\n       });\r\n\r\n       setSongs(newSongs);\r\n}\r\n    //Drag handler \r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n  setSongInfo({...songInfo, currentTime: e.target.value})\r\n    }\r\n    \r\n    //SkipTrackHandler\r\n    const skipTrackHandler =  async (direction) => {\r\n       let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n       if(direction === \"skip-forward\") {\r\n         await setCurrentSong(songs[(currentIndex + 1) % songs.length])\r\n         activeLibraryHandler(songs[(currentIndex + 1) % songs.length])\r\n       }  if(direction === \"skip-back\") {\r\n        if((currentIndex - 1) % songs.length === - 1) {\r\n            await setCurrentSong(songs[songs.length - 1])\r\n            activeLibraryHandler(songs[songs.length - 1])\r\n            if(isPlaying) audioRef.play()\r\n            return;\r\n        }\r\n       await setCurrentSong(songs[(currentIndex - 1) % songs.length ])\r\n       activeLibraryHandler(songs[(currentIndex - 1) % songs.length ])\r\n       }\r\n       if(isPlaying) audioRef.current.play()\r\n\r\n    }   \r\n    \r\n\r\n\r\n// eventHandler\r\n const playSongHandler = () => {\r\n     if(isPlaying) {\r\n    audioRef.current.pause();\r\n    setIsPlaying(!isPlaying);\r\n} else{\r\n    audioRef.current.play();\r\n    setIsPlaying(!isPlaying)\r\n     }\r\n }\r\n \r\n\r\n const getTime = (time) => {\r\n     return (\r\n        Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n     )\r\n }\r\n \r\n\r\n const trackAnim =  {\r\n    transform: `translate(${songInfo.animationPercentage}%)`\r\n }\r\n\r\n    return (\r\n        <div className=\"player\">\r\n      <div className=\"time-control\">\r\n          <p>{getTime(songInfo.currentTime)}</p>\r\n         \r\n         <div  style = {{background: `linear-gradient(to right, ${currentSong.Color[0]}, ${currentSong.Color[1]})`}}  className=\"track\">\r\n          <input min= {0} \r\n          max={songInfo.duration || 0}  \r\n          value= {songInfo.currentTime} \r\n          type=\"range\"\r\n          onChange = {dragHandler} />\r\n\r\n          <div style={trackAnim} className=\"animate-track\"></div>\r\n          </div>\r\n          <p>{songInfo.duration ? getTime(songInfo.duration): \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n          <FontAwesomeIcon onClick = {() => skipTrackHandler('skip-back')} className = \"skip-back\" size = \"2x\" icon = {faAngleLeft} />\r\n          <FontAwesomeIcon onClick = {playSongHandler} className = \"play\" size = \"2x\" icon = {isPlaying ? faPause : faPlay} />\r\n          <FontAwesomeIcon onClick = {() => skipTrackHandler('skip-forward')} className = \"skip-forward\" size = \"2x\" icon = {faAngleRight} />\r\n      </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;","\r\n\r\nconst Song = ({currentSong}) => {\r\n\r\n    return (\r\n<div className=\"song-container\">\r\n<img alt={currentSong.name} src ={currentSong.cover}></img>\r\n<h2>{currentSong.name}</h2>\r\n<h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\nconst Nav = ({libraryStatus, setLibraryStatus}) => {\r\n    return(\r\n        <nav>\r\n            <h1>Waves</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)\r\n            }>\r\n                {libraryStatus ? \"Close\" : \"Library\" }\r\n                <FontAwesomeIcon icon ={faMusic}/>\r\n            </button>\r\n        </nav>\r\n    ) \r\n}\r\nexport default Nav;","\r\nfunction chillHop() {\r\n    return [\r\n        {\r\n            name: \"Vitamin D\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/07/3b73a510169f14c4af83ac4016e809917412702b-1024x1024.jpg\" ,\r\n            artist: \"fantompower\" ,\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=22933\",\r\n            Color: [\"#D9B3DA\", \"#FEFEFB\"],\r\n            id:  Math.random() * 100,\r\n            active: true ,\r\n        },\r\n        {\r\n            name: \"Clarity\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/07/23e723de689a7b1253f600fc21de954300043ce3-300x300.jpg\",\r\n            artist: \"Fantompower\" ,\r\n            audio:  \"https://mp3.chillhop.com/serve.php/?mp3=22793\",\r\n            Color: [\"#FFA25F\", \"#8FAAB5\"] ,\r\n            id: Math.random() * 100,\r\n            active: false,\r\n        },\r\n        {\r\n            name: \"Memories part 2\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/07/034f52eeaeceb144cca67b0930d705d32fc39e37-1024x1024.jpg\",\r\n            artist: \"Ruck p\" ,\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=21660\"  ,\r\n            Color: [\"#DD8A8E\", \"#7D7188\"] ,\r\n            id:    Math.random() * 100 ,\r\n            active:  false,\r\n        },\r\n        {\r\n            name: \"Little Bird\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/07/23e723de689a7b1253f600fc21de954300043ce3-300x300.jpg\",\r\n            artist: \"Liphe\",\r\n            audio:  \"https://mp3.chillhop.com/serve.php/?mp3=21735\"  ,\r\n            Color:  [\"#FE8169\", \"#45193B\"],\r\n            id:    Math.random() * 100 ,\r\n            active:  false,\r\n        },\r\n        {\r\n            name: \"Viatecture\",\r\n            cover: \"https://chillhop.com/wp-content/uploads/2021/06/23b2ff959731b56ea8545828b462311e8b1a2bcc-1024x1024.jpg\" ,\r\n            artist: \"Leavy, Makzo\",\r\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=20119\",\r\n            Color: [\"#224E75\", \"#F1DFC9\"] ,\r\n            id:   Math.random() * 100  ,\r\n            active: false ,\r\n        },\r\n    ]\r\n}\r\nexport default chillHop;","import {useState, useRef } from 'react';\nimport Library from './Component/Library';\n\n// importing component \nimport Player from './Component/player';\nimport Song from './Component/song';\nimport Nav from './Component/Nav';\n\n//import styles\nimport './styles/app.scss';\n//imprt uti  \nimport data from \"./data\";\n\n\nfunction App() {\n\n  //ref \n  const audioRef = useRef(null);\n  //state\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n const [songInfo, setSongInfo] = useState({\n  currentTime: 0,\n  duration: 0,\n  animationPercentage: 0,\n});\n\nconst [libraryStatus, setLibraryStatus] = useState(false);\n\nconst timeUpdateHandler = (e) => {\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n\n  // Calculate percentage \n  const roundedCurrent = Math.round(current);\n  const roundedDuration = Math.round(duration);\n  const animation = Math.round((roundedCurrent/roundedDuration) * 100)\n  console.log(animation);\n  setSongInfo({...songInfo, currentTime: current, duration, animationPercentage: animation})\n  }\n\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length])\n    if (isPlaying) audioRef.current.play()\n  }\n  return (  \n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus = {libraryStatus} setLibraryStatus = {setLibraryStatus}/>\n    <Song currentSong = {currentSong} />  \n    <Player audioRef = {audioRef} \n    setIsPlaying = {setIsPlaying} \n    isPlaying = {isPlaying} \n    currentSong = {currentSong}\n    setSongInfo = {setSongInfo}\n    songInfo = {songInfo} \n    songs = {songs}\n    setCurrentSong = {setCurrentSong}\n    setSongs = {setSongs}\n    />  \n    \n    <Library \n    audioRef = {audioRef} \n    songs = {songs} \n    setCurrentSong = {setCurrentSong}\n    isPlaying = {isPlaying}\n    setSongs = {setSongs}\n    libraryStatus = {libraryStatus}\n    />\n\n\n    \n    <audio onLoadedMetadata = {timeUpdateHandler}\n      onTimeUpdate = {timeUpdateHandler} \n      ref={audioRef} \n      src={currentSong.audio}\n      onEnded = {songEndHandler}\n      ></audio>\n\n<div className=\"attribution\">\n      <h3><span>Developed</span> by Gp</h3>\n</div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}